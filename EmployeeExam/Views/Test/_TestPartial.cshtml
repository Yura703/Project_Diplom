@model EmployeeExam.Data.Entities.TestQuest
@{
    TestQuest quest = (TestQuest)ViewData["quest"];

}

<style>
    body {
        font-family: Arial, sans-serif; /* Рубленый шрифт */
    }

    .red {
        color: red; /* Красный цвет символов */
    }

    .green {
        color: limegreen;
    }

    .margin {
        margin-left: 10em;
    }
    .font_medium    {
        font-size:medium
    }  
    
</style>

<div class="test-other">
    <span class="margin">Вопрос</span>
    <span class="answer-quantity__done">@(quest.numberAnswer)</span>
    <span> из </span>
    <span class="answer-quantity__all">@quest.allAnswer</span>
</div>
<div class="test-other">
    <span class="green margin">Верных ответов: </span>
    <span class="green">@quest.posAnswer</span>
    <span class="red margin"> Не верных ответов: </span>
    <span class="red">@(quest.numberAnswer - quest.posAnswer - 1)</span>
</div>

<hr />

<div id="_answer" style="width: 20rem;"></div>
<br />
<div id="reference" class="font_medium badge badge-light text-wrap border border-primary"></div>

<hr />

<form asp-action="_TestPartial" asp-controller="Test" method="get">

    <label class = "font_medium badge badge-light text-wrap border border-primary form-check-label">@Html.DisplayFor(modelItem => quest.Quest)</label>

    <div class="form-check">
        <input class="form-check-input" type="radio" name="answer" id="Radios1" value="1" checked>
        <label class="font_medium badge badge-light text-wrap border border-info form-check-label text-justify" for="Radios1">
            @Html.DisplayFor(odelItem => quest.Variant1)
        </label>
    </div>

    <div class="form-check">
        <input class="form-check-input" type="radio" name="answer" id="Radios2" value="2">
        <label class="font_medium badge badge-light text-wrap border border-info form-check-label text-justify" for="Radios2">
            @Html.DisplayFor(odelItem => quest.Variant2)
        </label>
    </div>

    <div class="form-check">
        <input class="form-check-input" type="radio" name="answer" id="Radios3" value="3">
        <label class="font_medium badge badge-light text-wrap border border-info form-check-label text-justify" for="Radios3">
            @Html.DisplayFor(odelItem => quest.Variant3)
        </label>
    </div>

    @*<button type="button" class="btn btn-outline-info" onclick="check()">Проверить</button>*@
    <button type="button" class="btn btn-outline-info" id="button">Проверить</button>

    <button type="submit" class="btn btn-primary" onclick="CallChangefunc()">Продолжить</button>
    @*<button type="submit" class="btn btn-primary" onclick="check()" new { @CallChangefunc(this.value)>Ответить</button>*@

</form>

<script>
    let btn = document.querySelector("#button");
    let xhr = new XMLHttpRequest();
    var rad = document.getElementsByName('answer');

    btn.addEventListener("click", () => {
        document.querySelector("#reference").innerHTML = "@quest.Reference";

        if (rad["@quest.Answer"].checked) {
            document.querySelector("#_answer").className = "font_medium badge badge-success text-wrap";
            document.querySelector("#_answer").innerHTML = "Верный ответ";
        }
        else {
            document.querySelector("#_answer").className = "font_medium badge badge-danger text-wrap";
            document.querySelector("#_answer").innerHTML = "Неверный ответ";
        }
    })
</script>


<script>
    function check() {
        //var as = '<div class="ds">Текст текст</div><div class="sdf12">Текст текст</div>';
        $("#_answer").load("<h1>sssssss<h1/>");
    }
</script>

<div id="content" />

<script>
    function CallChangefunc() {
        $("#content").load("/Test/_TestPartial?quest.numberAnswer=" + quest.numberAnswer + "$quest.allAnswer" + quest.allAnswer + "$quest.variant" + quest.variant + "$quest.posAnswer" + quest.posAnswer);
        //window.location.href = "/Test/_TestPartial?value=" + val;
    }
</script>



